/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.42
 * Generated at: 2014-03-26 14:58:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import org.json.simple.*;
import java.net.*;

public final class InitalPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"utf-8\">\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("\n");
      out.write("\t<title>COMP5347 Assignment 1</title>\n");
      out.write("\t\n");
      out.write("\t<!-- If you are using CSS version, only link these 2 files, you may add app.css to use for your overrides if you like. -->\n");
      out.write("  \t<link rel=\"stylesheet\" href=\"css/normalize.css\">\n");
      out.write("  \t<link rel=\"stylesheet\" href=\"css/foundation.min.css\">\n");
      out.write("\n");
      out.write("\t<!--[if lt IE 9]>\n");
      out.write("\t<script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n");
      out.write("\t<![endif]-->\n");
      out.write("  \t<script src=\"js/jquery-1.11.0.min.js\"></script>\n");
      out.write("  \t<script src=\"js/foundation.js\"></script>\n");
      out.write("  \t<script src=\"js/foundation.reveal.js\"></script>\n");
      out.write("  \t<script src=\"js/customer.js\"></script>\n");
      out.write("  \t\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"row\">\n");
      out.write("    <div class=\"large-12 columns\">\n");
      out.write(" \n");
      out.write("    <!-- Navigation -->\n");
      out.write(" \n");
      out.write("      <div class=\"row\">\n");
      out.write("        <div class=\"large-12 columns\">\n");
      out.write(" \n");
      out.write("          <nav class=\"top-bar\" data-topbar>\n");
      out.write("            <ul class=\"title-area\">\n");
      out.write("              <!-- Title Area -->\n");
      out.write("              <li class=\"name\">\n");
      out.write("                <h1>\n");
      out.write("                    <a href=\"#\">COMP5347 Assignment 1</a>\n");
      out.write("                </h1>\n");
      out.write("              </li>\n");
      out.write("              \n");
      out.write("            </ul>\n");
      out.write("         \n");
      out.write("            \n");
      out.write("          </nav>\n");
      out.write("          <!-- End Top Bar -->\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write(" \n");
      out.write("    <!-- End Navigation -->\n");
      out.write("      <div class=\"row\">\n");
      out.write(" \n");
      out.write("    <!-- Thumbnails -->\n");
      out.write(" \n");
      out.write("        <div class=\"large-12 columns\">\n");
      out.write("          <div class=\"row\">\n");
      out.write("          ");

          String getproductionlist = (String) application.getAttribute("productionlist");
          String getURl = (String) application.getAttribute("getDomain");
          Object obj=JSONValue.parse(getproductionlist);
          JSONArray array=(JSONArray)obj;  
      
          for(int i=0; i<array.size();i++){
        	  JSONObject InnerObj=(JSONObject)array.get(i);
          
      out.write("\n");
      out.write("            <div class=\"large-6 small-12 columns\" style=\"margin-bottom:9px!important\"id=\"");
      out.print(InnerObj.get("id") );
      out.write("\">\n");
      out.write("\t\t\t\t<a href=\"");
      out.print(getURl);
      out.write("/Details?detail=");
      out.print(URLEncoder.encode(InnerObj.toJSONString(),"UTF-8") );
      out.write("\" data-reveal-id=\"myModal\" data-reveal-ajax=\"true\"><img class=\"Detail_production\" src=\"");
      out.print(getURl );
      out.write("/img/");
      out.print(InnerObj.get("img") );
      out.write("\"></a>   \n");
      out.write("\t\t\t\t<div class=\"panel\">\n");
      out.write("                <h5 class=\"Detail_production\"><a href=\"");
      out.print(getURl);
      out.write("/Details?detail=");
      out.print(URLEncoder.encode(InnerObj.toJSONString(),"UTF-8") );
      out.write("\" data-reveal-id=\"myModal\" data-reveal-ajax=\"true\">");
      out.print(InnerObj.get("name") );
      out.write("</a></h5>\n");
      out.write("                <h5 class=\"subheader\"><i>Price:</i> ");
      out.print(InnerObj.get("price") );
      out.write("</h5>\n");
      out.write("            \t");
 
  					@SuppressWarnings({ "unchecked", "unchecked" })
            		Map<String,Integer> userSession = (Map<String,Integer>) session.getAttribute("UserSession");
            		if (userSession!=null && userSession.containsKey(InnerObj.get("id"))){
      out.write("\n");
      out.write("            \t\t\t<h6><i>Your rating:</i> ");
      out.print(userSession.get(InnerObj.get("id")) );
      out.write("</h6>\n");
      out.write("            \t\t");
}
            	
      out.write("\n");
      out.write("            \t\n");
      out.write("            \t\n");
      out.write("            \t");
          
					@SuppressWarnings({ "unchecked", "unchecked" })
     		 		HashMap<String,String> getavg = (HashMap<String,String>) getServletContext().getAttribute("GlobalProAvge");
     		   			if (getavg==null || !getavg.containsKey(InnerObj.get("id"))){
      out.write("\n");
      out.write("\t\t\t\t\t\t<h6><i>Average Ratings:</i> 0</h6>\t\t\t\t\t\t\n");
      out.write("\t\t\t\t   ");
}else{
      out.write("\n");
      out.write("\t\t\t\t   \t\t<h6><i>Average Ratings:</i> ");
      out.print(getavg.get(InnerObj.get("id")) );
      out.write("</h6>\n");
      out.write("\t\t\t\t   ");
}
      out.write("\n");
      out.write("            \t\n");
      out.write("            \t\n");
      out.write("            \t\n");
      out.write("            \t");
 
          			@SuppressWarnings({ "unchecked", "unchecked" })
          		 	HashMap<String,Integer> getcount = (HashMap<String,Integer>) getServletContext().getAttribute("GlobalProCount");
          		   	if (getcount==null || !getcount.containsKey(InnerObj.get("id"))){
      out.write("\n");
      out.write("          \t\t  \t\t     <h6><i>Total No of Ratings:</i> 0</h6>          \t\t   \t\t\t\n");
      out.write("          \t\t  \t\t\n");
      out.write("          \t\t   ");
}else{
      out.write("\n");
      out.write("          \t\t            <h6><i>Total No of Ratings:</i> ");
      out.print(getcount.get(InnerObj.get("id")) );
      out.write("</h6>          \t\t   \t\t\t\n");
      out.write("          \t\t   \n");
      out.write("          \t\t   ");
}
      out.write("\n");
      out.write("            \t\n");
      out.write("            \t\n");
      out.write("            \t</div> \t\n");
      out.write("           </div>\n");
      out.write("           \n");
      out.write("          ");
}
      out.write("\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      </div>\n");
      out.write(" \n");
      out.write("   \n");
      out.write("    <!-- Footer -->\n");
      out.write(" \n");
      out.write("      <footer class=\"row\">\n");
      out.write("        <div class=\"large-12 columns\"><hr />\n");
      out.write("          <div class=\"row\">\n");
      out.write("              <p class=\"text-center\">@The Demo processed by XUN ZHAO (440042783)</p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </footer>\n");
      out.write(" \n");
      out.write("    <!-- End Footer -->\n");
      out.write("    </div>\n");
      out.write("  </div>\t\n");
      out.write("  <div id=\"myModal\" class=\"reveal-modal\" data-reveal></div>  \n");
      out.write("  \n");
      out.write("  \n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
